# Welcome to Dashy! To get started, run `docker compose up -d`
# You can configure your container here, by modifying this file
services:
  dashy:
    container_name: dashy
    image: lissy93/dashy:latest
    domainname: ${DOMAIN_NAME}
    restart: unless-stopped

    networks:
      - proxy

    # Pass in your config file below, by specifying the path on your host machine
    volumes:
      # - /path/to/my-config.yml:/app/public/conf.yml
      #- ./config/conf.yml:/app/public/conf.yml
      # - /path/to/item-icons:/app/public/item-icons
      - ./dashy-data:/app/public

    # Set port that web service will be served on. Keep container port as 80
    ports:
      - 89:80

    # Set any environmental variables
    environment:
      - NODE_ENV=production
      - TZ=${TZ}
        #      - UID=${PUID}
        #      - GID=${PGID}

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"

      - "traefik.http.routers.dashy.entrypoints=web"
      - "traefik.http.routers.dashy.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.dashy.middlewares=secureHeaders@file"

      ## HTTP Routers
      - "traefik.http.routers.dashy-secure.entrypoints=websecure"
      - "traefik.http.routers.dashy-secure.rule=Host(`$DOMAIN_NAME`)"
      - "traefik.http.routers.dashy-secure.service=dashy"
      - "traefik.http.routers.dashy-secure.tls.certresolver=letsencrypt"
      ## Middlewares
      #      - "traefik.http.routers.traefik-secure.middlewares=user-auth@file"
      #      - "traefik.http.middlewares=secureHeaders@file"
      ## HTTP Services
      - "traefik.http.services.dashy.loadbalancer.server.port=89"


    # Configure healthchecks
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s


networks:
  proxy:
    name: proxy
    external: true
